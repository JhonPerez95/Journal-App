{"version":3,"sources":["redux/types/types.js","firebase/firebaseConfig.js","helpers/loadNotes.js","helpers/fileUpload.js","redux/actions/noteActions.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","redux/actions/uiAction.js","redux/actions/authActions.js","components/journal/Sidebar.js","components/journal/NothingSelected.js","components/note/NotesAppBar.js","hook/useForm.js","components/note/NoteScreen.js","components/journal/JournalScreen.js","components/auth/RegisterScreen.js","components/auth/LoginScreen.js","routes/AuthRoutes.js","components/loading/Loading.js","routes/PrivateRoutes.js","routes/PublicRoutes.js","routes/AppRoutes.js","redux/reducers/authReducer.js","redux/reducers/uiReducer.js","redux/reducers/noteReducer.js","redux/store/store.js","App.js","index.js"],"names":["types","login","logout","uiSetError","uiRemoveError","uiStartLoading","uiFinishLoading","notesAddNew","notesActive","notesLoad","notesUpdate","notesFileUrl","notesDelete","notesLogoutCleaning","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","auhtGoogleProvider","auth","GoogleAuthProvider","loadNotes","id","a","collection","get","notesSnap","notes","forEach","item","push","data","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","respCloud","secure_url","console","error","activeNote","note","type","payload","setNotes","addNewNote","startLoadingNotes","uid","dispatch","startSaveNotes","getState","url","noteUpdate","doc","update","refreshNote","Swal","fire","title","deleteNote","JournalEntry","date","noteDate","moment","useDispatch","className","onClick","style","backgroundImage","backgroundSize","format","JournalEntries","useSelector","state","map","key","actAlertError","actFinishLoading","displayName","startEmailLogin","email","password","signInWithEmailAndPassword","then","user","catch","err","message","Sidebar","name","signOut","newNote","Date","getTime","add","docRef","NothingSelected","NotesAppBar","active","display","onChange","e","target","files","text","allowOutsideClick","onBeforeOpen","showLoading","fileUrl","close","startUploading","document","querySelector","click","useForm","initialState","useState","value","setValue","handleInputChange","resetInput","newState","NoteScreen","formValue","resetForm","activeId","useRef","useEffect","current","placeholder","src","alt","delete","startDeleting","JournalScreen","RegisterScreen","password2","isFormValid","trim","length","isEmail","onSubmit","preventDefault","createUserWithEmailAndPassword","updateProfile","startEmailRegister","autoComplete","to","LoginScreen","loading","ui","disabled","signInWithPopup","AuthRoutes","exact","path","component","useStyles","makeStyles","theme","root","width","marginTop","spacing","Loading","classes","LinearProgress","color","PrivateRoutes","isAuth","Component","all","props","PublicRoutes","AppRoutes","cheking","setCheking","setIsAuth","onAuthStateChanged","require","initalState","msgError","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducer","combineReducers","filter","store","createStore","applyMiddleware","thunk","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.74ffa19c.chunk.js","sourcesContent":["export const types = {\n  login: '[Auth] login',\n  logout: '[Auth] logout',\n\n  uiSetError: '[UI] Set Error',\n  uiRemoveError: '[UI] Remove Error',\n  uiStartLoading: '[UI] Start loading',\n  uiFinishLoading: '[UI] Finish loading',\n\n  notesAddNew: '[Notes] New Note',\n  notesActive: '[Notes] Active Note',\n  notesLoad: '[Notes] Load Notes',\n  notesUpdate: '[Notes] Updated Notes',\n  notesFileUrl: '[Notes] Updated Img Url',\n  notesDelete: '[Notes] Updated Img Url',\n  notesLogoutCleaning: '[Notes] Logout Cleanning',\n};\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: 'AIzaSyCmkzgR0n5aJ3mkqH9oGDBBYpWXaui1bt0',\n  authDomain: 'react-app-cursos-c717d.firebaseapp.com',\n  databaseURL: 'https://react-app-cursos-c717d.firebaseio.com',\n  projectId: 'react-app-cursos-c717d',\n  storageBucket: 'react-app-cursos-c717d.appspot.com',\n  messagingSenderId: '321837841344',\n  appId: '1:321837841344:web:ad943d35ab163c42ee6625',\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\nconst auhtGoogleProvider = new firebase.auth.GoogleAuthProvider();\n\nexport { db, auhtGoogleProvider, firebase };\n","import { db } from '../firebase/firebaseConfig';\n\nexport const loadNotes = async (id) => {\n  const notesSnap = await db.collection(`${id}/journal/notes`).get();\n  const notes = [];\n\n  notesSnap.forEach((item) => {\n    notes.push({\n      id: item.id,\n      ...item.data(),\n    });\n  });\n\n  return notes;\n};\n","export const fileUpload = async (file) => {\n  const urlApi = 'https://api.cloudinary.com/v1_1/jhontt95/upload';\n  const formData = new FormData();\n  formData.append('upload_preset', 'react-journal');\n  formData.append('file', file);\n\n  try {\n    const resp = await fetch(urlApi, {\n      method: 'POST',\n      body: formData,\n    });\n\n    if (resp.ok) {\n      const respCloud = await resp.json();\n      return respCloud.secure_url;\n    } else {\n      return null;\n    }\n  } catch (error) {\n    console.error(error);\n  }\n};\n","import Swal from 'sweetalert2';\n\nimport { db } from '../../firebase/firebaseConfig';\nimport { types } from '../types/types';\nimport { loadNotes } from '../../helpers/loadNotes';\nimport { fileUpload } from '../../helpers/fileUpload';\n\nexport const activeNote = (id, note) => {\n  return {\n    type: types.notesActive,\n    payload: {\n      id,\n      ...note,\n    },\n  };\n};\n\nexport const startNewNote = () => {\n  return async (dispatch, getState) => {\n    const { uid } = getState().auth;\n\n    const newNote = {\n      title: '',\n      body: '',\n      url: '',\n      date: new Date().getTime(),\n    };\n\n    const docRef = await db.collection(`${uid}/journal/notes`).add(newNote);\n\n    dispatch(activeNote(docRef.id, newNote));\n    dispatch(addNewNote(docRef.id, newNote));\n  };\n};\n\nexport const setNotes = (notes) => ({\n  type: types.notesLoad,\n  payload: notes,\n});\n\nexport const addNewNote = (id, notes) => ({\n  type: types.notesAddNew,\n  payload: {\n    id,\n    ...notes,\n  },\n});\n\nexport const startLoadingNotes = (uid) => {\n  return async (dispatch) => {\n    const notes = await loadNotes(uid);\n    dispatch(setNotes(notes));\n  };\n};\n\nexport const startSaveNotes = (note) => {\n  return async (dispatch, getState) => {\n    const { uid } = getState().auth;\n    if (!note.url) {\n      note.url = null;\n    }\n    const noteUpdate = { ...note };\n    delete noteUpdate.id;\n\n    await db.doc(`${uid}/journal/notes/${note.id}`).update(noteUpdate);\n\n    dispatch(refreshNote(note.id, note));\n\n    Swal.fire('Saved', note.title, 'success');\n  };\n};\n\nexport const refreshNote = (id, note) => {\n  return {\n    type: types.notesUpdate,\n    payload: {\n      id,\n      note: {\n        ...note,\n      },\n    },\n  };\n};\n\nexport const startUploading = (file) => {\n  return async (dispatch, getState) => {\n    const { active: activeNote } = getState().notes;\n\n    Swal.fire({\n      title: 'Uploading IMG',\n      text: 'Please wait....',\n      allowOutsideClick: false,\n      onBeforeOpen: () => {\n        Swal.showLoading();\n      },\n    });\n\n    const fileUrl = await fileUpload(file);\n    activeNote.url = fileUrl;\n\n    dispatch(startSaveNotes(activeNote));\n\n    Swal.close();\n  };\n};\n\nexport const deleteNote = (id) => {\n  return {\n    type: types.notesDelete,\n    payload: id,\n  };\n};\n\nexport const startDeleting = (id) => {\n  return async (dispatch, getState) => {\n    const { uid } = getState().auth;\n    await db.doc(`${uid}/journal/notes/${id}`).delete();\n\n    dispatch(deleteNote(id));\n  };\n};\n\nexport const notesLoguot = () => ({\n  type: types.notesLogoutCleaning,\n});\n","import React from 'react';\n\nimport moment from 'moment';\nimport { useDispatch } from 'react-redux';\nimport { activeNote } from '../../redux/actions/noteActions';\n\nconst JournalEntry = ({ title, body, url, date, id }) => {\n  const noteDate = moment(date);\n  const dispatch = useDispatch();\n  const handleClickEntries = () => {\n    dispatch(activeNote(id, { title, body, url, date }));\n  };\n  return (\n    <div className=\"journal__entry pointer\" onClick={handleClickEntries}>\n      {url && (\n        <div\n          className=\"journal__entry-picture\"\n          style={{\n            backgroundImage: `url(${url})`,\n            backgroundSize: 'cover',\n          }}\n        ></div>\n      )}\n      <div className=\"journal__entry-body\">\n        <p className=\"journal__entry-title\">{title}</p>\n        <p className=\"journal__entry-content\">{body}</p>\n      </div>\n      <div className=\"journal__entry-date-box\">\n        <samp>{noteDate.format('dddd')}</samp>\n        <h4>{noteDate.format('Do')}</h4>\n      </div>\n    </div>\n  );\n};\n\nexport default JournalEntry;\n","import React from 'react';\nimport JournalEntry from './JournalEntry';\nimport { useSelector } from 'react-redux';\n\nconst JournalEntries = () => {\n  const { notes } = useSelector((state) => state.notes);\n\n  return (\n    <div className=\"journal__entries\">\n      {notes.map((item) => (\n        <JournalEntry key={item.id} {...item} />\n      ))}\n    </div>\n  );\n};\n\nexport default JournalEntries;\n","import { types } from '../types/types';\n\nimport Swal from 'sweetalert2';\n\nexport const actSetError = (payload) => {\n  return {\n    type: types.uiSetError,\n    payload,\n  };\n};\n\n// Alert Error\nexport const actAlertError = (error) => {\n  return (dispatch) => {\n    dispatch(actSetError(error));\n    Swal.fire('Error!', error, 'error');\n  };\n};\n\nexport const actRemoveError = () => {\n  return {\n    type: types.uiRemoveError,\n  };\n};\n\nexport const actStartLoading = () => {\n  return {\n    type: types.uiStartLoading,\n  };\n};\n\nexport const actFinishLoading = () => {\n  return {\n    type: types.uiFinishLoading,\n  };\n};\n","import { types } from '../types/types';\nimport { firebase, auhtGoogleProvider } from '../../firebase/firebaseConfig';\nimport { actStartLoading, actFinishLoading } from './uiAction';\n\nimport Swal from 'sweetalert2';\n\n// Login\nexport const login = (uid, displayName) => {\n  return {\n    type: types.login,\n    payload: {\n      uid,\n      displayName,\n    },\n  };\n};\n\n// Logout\nexport const logout = () => {\n  return {\n    type: types.logout,\n  };\n};\n\nexport const startLogout = () => {\n  return async (dispatch) => {\n    await firebase.auth().signOut();\n    dispatch(logout());\n  };\n};\n\n// Login with Email\nexport const startEmailLogin = (email, password) => {\n  return (dispatch) => {\n    dispatch(actStartLoading());\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then(({ user }) => {\n        dispatch(login(user.uid, user.displayName));\n        dispatch(actFinishLoading());\n      })\n      .catch((err) => {\n        dispatch(actFinishLoading());\n        Swal.fire('Error', err.message, 'error');\n      });\n  };\n};\n\n// Login with Google\nexport const startGoogleLogin = () => {\n  return (dispatch) => {\n    firebase\n      .auth()\n      .signInWithPopup(auhtGoogleProvider)\n      .then(({ user }) => dispatch(login(user.uid, user.displayName)))\n      .catch((err) => Swal.fire('Error', err.message, 'error'));\n  };\n};\n\n// Register with FireBase\nexport const startEmailRegister = (email, password, name) => {\n  return (dispatch) => {\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then(async ({ user }) => {\n        await user.updateProfile({ displayName: name });\n        dispatch(login(user.uid, user.displayName));\n      })\n      .catch((err) => Swal.fire('Error', err.message, 'error'));\n  };\n};\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport JournalEntries from './JournalEntries';\nimport { startLogout } from '../../redux/actions/authActions';\nimport { startNewNote, notesLoguot } from '../../redux/actions/noteActions';\n\nconst Sidebar = () => {\n  const dispatch = useDispatch();\n\n  const handleLogout = () => {\n    dispatch(startLogout());\n    dispatch(notesLoguot());\n  };\n\n  const handleAddNew = () => {\n    dispatch(startNewNote());\n  };\n\n  const { name } = useSelector((state) => state.auth);\n  return (\n    <aside className=\"journal__sidebar\">\n      <div className=\"journal__sidebar-navbar\">\n        <h3 className=\"mt-5\">\n          <i className=\"far fa-moon\" />\n          <span> {name}</span>\n        </h3>\n        <button className=\"btn\" onClick={handleLogout}>\n          logout\n        </button>\n      </div>\n      <div className=\"journal__new-entry\" onClick={handleAddNew}>\n        <i className=\"far fa-calendar-plus fa-5x\" />\n        <p className=\"mt-5\">New Entry</p>\n      </div>\n      <JournalEntries />\n    </aside>\n  );\n};\n\nexport default Sidebar;\n","import React from 'react';\n\nconst NothingSelected = () => {\n  return (\n    <div className=\"nothing__main-content\">\n      <p>\n        Select somenthing\n        <br />\n        create an entry!\n      </p>\n      <i className=\"far fa-star fa-4x mt-5\"></i>\n    </div>\n  );\n};\n\nexport default NothingSelected;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\n\nimport {\n  startSaveNotes,\n  startUploading,\n} from '../../redux/actions/noteActions';\n\nconst NotesAppBar = () => {\n  const dispatch = useDispatch();\n  const { active } = useSelector((state) => state.notes);\n  const noteDate = moment(active.date);\n\n  const hanldeSave = () => {\n    dispatch(startSaveNotes(active));\n  };\n\n  const handlePicture = () => {\n    document.querySelector('#inputSelector').click();\n  };\n\n  const handleSelector = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      dispatch(startUploading(file));\n    }\n  };\n  return (\n    <div className=\"notes__appbar\">\n      <span>{noteDate.format('LL')}</span>\n\n      <input\n        id=\"inputSelector\"\n        type=\"file\"\n        name=\"file\"\n        style={{ display: 'none' }}\n        onChange={handleSelector}\n      />\n\n      <div className=\"\">\n        <button className=\"btn\" onClick={handlePicture}>\n          Picture\n        </button>\n        <button className=\"btn\" onClick={hanldeSave}>\n          Save\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default NotesAppBar;\n","import { useState } from 'react';\n\nconst useForm = (initialState = {}) => {\n  const [value, setValue] = useState(initialState);\n\n  const handleInputChange = ({ target }) => {\n    setValue({ ...value, [target.name]: target.value });\n  };\n\n  const resetInput = (newState = initialState) => {\n    setValue(newState);\n  };\n\n  return [value, handleInputChange, resetInput];\n};\n\nexport default useForm;\n","import React, { useEffect, useRef } from 'react';\nimport NotesAppBar from './NotesAppBar';\nimport { useSelector, useDispatch } from 'react-redux';\nimport useForm from '../../hook/useForm';\nimport { activeNote, startDeleting } from '../../redux/actions/noteActions';\n\nconst NoteScreen = () => {\n  const dispatch = useDispatch();\n  const { active: note } = useSelector((state) => state.notes);\n\n  const [formValue, handleInputChange, resetForm] = useForm(note);\n  const { title, body, url, id } = formValue;\n\n  const activeId = useRef(note.id);\n\n  // update form\n  useEffect(() => {\n    if (note.id !== activeId.current) {\n      resetForm(note);\n      activeId.current = note.id;\n    }\n  }, [note, resetForm]);\n\n  // update state note.active\n  useEffect(() => {\n    dispatch(activeNote(formValue.id, { ...formValue }));\n  }, [formValue, dispatch]);\n\n  const hanldeDelete = () => {\n    dispatch(startDeleting(id));\n    // console.log('click Delete', id);\n  };\n\n  return (\n    <div className=\"notes__main-content\">\n      <NotesAppBar />\n      <div className=\"notes__content\">\n        <input\n          type=\"text\"\n          className=\"notes__title-input\"\n          placeholder=\"Some awesome title\"\n          name=\"title\"\n          onChange={handleInputChange}\n          value={title}\n        />\n        <textarea\n          placeholder=\" What happended today\"\n          className=\"notes__textarea\"\n          name=\"body\"\n          onChange={handleInputChange}\n          value={body}\n        ></textarea>\n        {url && (\n          <div className=\"notes__image\">\n            <img src={url} alt=\"img\" />\n          </div>\n        )}\n      </div>\n      <button className=\"btn btn-danger\" onClick={hanldeDelete}>\n        Delete\n      </button>\n    </div>\n  );\n};\n\nexport default NoteScreen;\n","import React from 'react';\nimport Sidebar from './Sidebar';\nimport NothingSelected from './NothingSelected';\nimport NoteScreen from '../note/NoteScreen';\nimport { useSelector } from 'react-redux';\n\nconst JournalScreen = () => {\n  const { active } = useSelector((state) => state.notes);\n\n  return (\n    <div className=\"journal__main-content\">\n      <Sidebar />\n      <main>{active ? <NoteScreen /> : <NothingSelected />}</main>\n    </div>\n  );\n};\n\nexport default JournalScreen;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport isEmail from 'validator/es/lib/isEmail';\nimport { useDispatch } from 'react-redux';\n\nimport useForm from '../../hook/useForm';\nimport { actRemoveError, actAlertError } from '../../redux/actions/uiAction';\nimport { startEmailRegister } from '../../redux/actions/authActions';\n\nconst RegisterScreen = () => {\n  const dispatch = useDispatch();\n  // const { msgError } = useSelector((state) => state.ui);\n\n  const [formValue, handleInputChange] = useForm({\n    name: '',\n    email: '',\n    password: '',\n    password2: '',\n  });\n  const { name, email, password, password2 } = formValue;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (isFormValid()) {\n      dispatch(startEmailRegister(email, password, name));\n    }\n  };\n\n  const isFormValid = () => {\n    if (name.trim().length === 0) {\n      dispatch(actAlertError('Name is required'));\n      return false;\n    } else if (!isEmail(email)) {\n      dispatch(actAlertError('Email is not valid'));\n      return false;\n    } else if (password !== password2 || password.length <= 5) {\n      dispatch(actAlertError('Password is not valid'));\n      return false;\n    }\n    dispatch(actRemoveError());\n    return true;\n  };\n\n  return (\n    <>\n      <h3 className=\"auth__title\">Registrer</h3>\n      {/* {msgError && <div className=\"auth__alert-error\">{msgError}</div>} */}\n      <form onSubmit={handleSubmit}>\n        <input\n          className=\"auth__input\"\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Name\"\n          value={name}\n          onChange={handleInputChange}\n        />\n        <input\n          className=\"auth__input\"\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Email\"\n          value={email}\n          onChange={handleInputChange}\n          autoComplete=\"off\"\n        />\n        <input\n          className=\"auth__input\"\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={handleInputChange}\n        />\n        <input\n          className=\"auth__input\"\n          type=\"password\"\n          name=\"password2\"\n          placeholder=\"Confirm\"\n          value={password2}\n          onChange={handleInputChange}\n        />\n        <button className=\"btn btn-primary btn-block mb-5\" type=\"submit\">\n          Register\n        </button>\n\n        <Link className=\"link\" to=\"/auth/login\">\n          Already registered?\n        </Link>\n      </form>\n    </>\n  );\n};\n\nexport default RegisterScreen;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport useForm from '../../hook/useForm';\nimport {\n  startGoogleLogin,\n  startEmailLogin,\n} from '../../redux/actions/authActions';\n\nconst LoginScreen = () => {\n  // const history = useHistory();\n  const dispatch = useDispatch();\n\n  const { loading } = useSelector((state) => state.ui);\n\n  const [formValue, handleInputChange] = useForm({\n    email: '',\n    password: '',\n  });\n\n  const { email, password } = formValue;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(startEmailLogin(email, password));\n    // history.push('/');\n  };\n\n  const handleGoogleLogin = () => {\n    dispatch(startGoogleLogin());\n  };\n\n  return (\n    <>\n      <h3 className=\"auth__title\">Login</h3>\n\n      <form onSubmit={handleSubmit}>\n        <input\n          className=\"auth__input\"\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Email\"\n          autoComplete=\"off\"\n          value={email}\n          onChange={handleInputChange}\n        />\n        <input\n          className=\"auth__input\"\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={handleInputChange}\n        />\n        <button\n          className=\"btn btn-primary btn-block\"\n          type=\"submit\"\n          disabled={loading}\n        >\n          Login\n        </button>\n        <div className=\"auth__social-networks\">\n          <p>Login With Social Networks</p>\n          <div className=\"google-btn\" onClick={handleGoogleLogin}>\n            <div className=\"google-icon-wrapper\">\n              <img\n                className=\"google-icon\"\n                src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"\n                alt=\"google button\"\n              />\n            </div>\n            <p className=\"btn-text\">\n              <b>Sign in with google</b>\n            </p>\n          </div>\n        </div>\n        <Link className=\"link\" to=\"/auth/register\">\n          Create New Acount\n        </Link>\n      </form>\n    </>\n  );\n};\n\nexport default LoginScreen;\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport RegisterScreen from '../components/auth/RegisterScreen';\nimport LoginScreen from '../components/auth/LoginScreen';\n\nconst AuthRoutes = () => {\n  return (\n    <div className=\"auth__main\">\n      <div className=\"auth__box-container\">\n        <Switch>\n          <Route exact path=\"/auth/login\" component={LoginScreen} />\n          <Route exact path=\"/auth/register\" component={RegisterScreen} />\n\n          <Redirect to=\"/auth/login\" />\n        </Switch>\n      </div>\n    </div>\n  );\n};\n\nexport default AuthRoutes;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nconst Loading = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <LinearProgress />\n      <LinearProgress color=\"secondary\" />\n    </div>\n  );\n};\n\nexport default Loading;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoutes = ({ isAuth, component: Component, ...all }) => {\n  return (\n    <Route\n      {...all}\n      component={(props) =>\n        isAuth ? <Component {...props} /> : <Redirect to=\"/auht/login\" />\n      }\n    />\n  );\n};\n\nPrivateRoutes.propTypes = {\n  isAuth: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired,\n};\n\nexport default PrivateRoutes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PublicRoutes = ({ isAuth, component: Component, ...all }) => {\n  return (\n    <Route\n      {...all}\n      component={(props) =>\n        !isAuth ? <Component {...props} /> : <Redirect to=\"/\" />\n      }\n    />\n  );\n};\n\nPublicRoutes.propTypes = {\n  isAuth: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired,\n};\n\nexport default PublicRoutes;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { BrowserRouter as Router, Switch, Redirect } from 'react-router-dom';\n\nimport { firebase } from '../firebase/firebaseConfig';\nimport JournalScreen from '../components/journal/JournalScreen';\nimport AuthRoutes from './AuthRoutes';\nimport { login } from '../redux/actions/authActions';\nimport Loading from '../components/loading/Loading';\nimport PrivateRoutes from './PrivateRoutes';\nimport PublicRoutes from './PublicRoutes';\nimport { startLoadingNotes } from '../redux/actions/noteActions';\n\nconst AppRoutes = () => {\n  const dispatch = useDispatch();\n  const [cheking, setCheking] = useState(true);\n  const [isAuth, setIsAuth] = useState(false);\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged(async (user) => {\n      if (user?.uid) {\n        dispatch(login(user.uid, user.displayName));\n        dispatch(startLoadingNotes(user.uid));\n        setIsAuth(true);\n      } else {\n        setIsAuth(false);\n      }\n      setCheking(false);\n    });\n  }, [dispatch, setCheking]);\n\n  if (cheking) {\n    return <Loading />;\n  }\n\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <PublicRoutes isAuth={isAuth} path=\"/auth\" component={AuthRoutes} />\n          <PrivateRoutes\n            exact\n            isAuth={isAuth}\n            path=\"/\"\n            component={JournalScreen}\n          />\n\n          <Redirect to=\"/auth/login\" />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default AppRoutes;\n","const { types } = require('../types/types');\n\nexport const authReducer = (state = {}, { type, payload }) => {\n  switch (type) {\n    case types.login:\n      return {\n        uid: payload.uid,\n        name: payload.displayName,\n      };\n    case types.logout:\n      return {};\n\n    default:\n      return state;\n  }\n};\n","import { types } from '../types/types';\n\nconst initalState = {\n  loading: false,\n  msgError: null,\n};\n\nexport const uiReducer = (state = initalState, { type, payload }) => {\n  switch (type) {\n    case types.uiSetError:\n      return {\n        ...state,\n        msgError: payload,\n      };\n\n    case types.uiRemoveError:\n      return {\n        ...state,\n        msgError: null,\n      };\n\n    case types.uiStartLoading:\n      return {\n        ...state,\n        loading: true,\n      };\n    case types.uiFinishLoading:\n      return {\n        ...state,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n};\n","import { types } from '../types/types';\n\nconst initialState = {\n  notes: [],\n  active: null,\n};\n\nexport const noteReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case types.notesActive:\n      return {\n        ...state,\n        active: {\n          ...payload,\n        },\n      };\n\n    case types.notesLoad:\n      return {\n        ...state,\n        notes: [...payload],\n      };\n\n    case types.notesUpdate:\n      return {\n        ...state,\n        notes: state.notes.map((item) =>\n          item.id === payload.id ? payload.note : item\n        ),\n      };\n\n    case types.notesAddNew:\n      return {\n        ...state,\n        notes: [payload, ...state.notes],\n      };\n\n    case types.notesDelete:\n      return {\n        ...state,\n        active: null,\n        notes: state.notes.filter((item) => item.id !== payload),\n      };\n\n    case types.notesLogoutCleaning:\n      return initialState;\n\n    default:\n      return state;\n  }\n};\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { authReducer } from '../reducers/authReducer';\nimport { uiReducer } from '../reducers/uiReducer';\nimport { noteReducer } from '../reducers/noteReducer';\n\n//\nconst composeEnhancers =\n  (typeof window !== 'undefined' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\n\n// REDUCER\nconst reducer = combineReducers({\n  auth: authReducer,\n  ui: uiReducer,\n  notes: noteReducer,\n});\n\nexport const store = createStore(\n  reducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport AppRoutes from './routes/AppRoutes';\nimport { store } from './redux/store/store';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <AppRoutes />\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/styles.scss';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}